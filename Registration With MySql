package registration.form;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Registration extends javax.swing.JFrame {

    Connection connection;
    PreparedStatement insertwithq;
    String driver = "com.mysql.cj.jdbc.Driver";
    String url = "jdbc:mysql://localhost:3306/studentpro";
    String user = "root";
    String password = "root";

    public Registration() {
        initComponents();
        tableUpdate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textName = new javax.swing.JTextField();
        textMobile = new javax.swing.JTextField();
        textCourse = new javax.swing.JTextField();
        editD = new javax.swing.JButton();
        deleteD = new javax.swing.JButton();
        addingD = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        stuTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Student Course Register");

        jLabel1.setFont(new java.awt.Font("Ravenna", 1, 36)); // NOI18N
        jLabel1.setText("Student Registration");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registration", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tatum", 0, 14))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Student Name");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("Mobile");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setText("Course");

        textCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textCourseActionPerformed(evt);
            }
        });

        editD.setText("Edit");
        editD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDActionPerformed(evt);
            }
        });

        deleteD.setText("Delete");
        deleteD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDActionPerformed(evt);
            }
        });

        addingD.setText("Add");
        addingD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addingDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(textCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(textMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(addingD))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(deleteD)
                                .addGap(69, 69, 69)
                                .addComponent(editD)))))
                .addGap(66, 66, 66))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textMobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editD)
                    .addComponent(addingD)
                    .addComponent(deleteD))
                .addGap(55, 55, 55))
        );

        stuTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Mobile", "Course"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        stuTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stuTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(stuTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(328, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(278, 278, 278))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void textCourseActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void editDActionPerformed(java.awt.event.ActionEvent evt) {                                      

        DefaultTableModel defaultTableModel = (DefaultTableModel) stuTable.getModel();
        int selectedIndex = stuTable.getSelectedRow();

        try {

            int id = Integer.parseInt(defaultTableModel.getValueAt(selectedIndex, 0).toString());

            String name = textName.getText();
            String phonenumber = textMobile.getText();
            String course = textCourse.getText();

            Class.forName(driver);
            connection = DriverManager.getConnection(url, user, password);
            insertwithq = connection.prepareStatement("update records set name = ?, mobile = ?, course = ? where id = ?");
            insertwithq.setString(1, name);
            insertwithq.setString(2, phonenumber);
            insertwithq.setString(3, course);
            insertwithq.setInt(4, id);
            insertwithq.executeUpdate();

            JOptionPane.showMessageDialog(this, "Record Updated");

            textName.setText("");
            textMobile.setText("");
            textCourse.setText("");
            textName.requestFocus();
            tableUpdate();

        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }                                     

    public void tableUpdate() {
        try {
            Class.forName(driver);
            connection = DriverManager.getConnection(url, user, password);
            insertwithq = connection.prepareStatement("select * from records");
            ResultSet resultSet = insertwithq.executeQuery();
            DefaultTableModel defaultTableModel = (DefaultTableModel) stuTable.getModel();
            defaultTableModel.setRowCount(0);
            while (resultSet.next()) {
                String[] datas = {resultSet.getString("id"), resultSet.getString("name"), resultSet.getString("mobile"), resultSet.getString("course")};
                defaultTableModel.addRow(datas);
            }
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }

    private void addingDActionPerformed(java.awt.event.ActionEvent evt) {                                        

        String name = textName.getText();
        String phonenumber = textMobile.getText();
        String course = textCourse.getText();

        //Checking the Name,Mobile and Course if the text length is greater than 0 or not 
        if (textName.getText().length() > 0 && textMobile.getText().length() > 0 && textCourse.getText().length() > 0) {
            // Mysql Methods and Queries //
            try {
                Class.forName(driver);
                connection = DriverManager.getConnection(url, user, password);
                insertwithq = connection.prepareStatement("insert into records(name, mobile, course)"
                        + " values(?,?,?)");
                insertwithq.setString(1, name);
                insertwithq.setString(2, phonenumber);
                insertwithq.setString(3, course);
                insertwithq.executeUpdate();
                JOptionPane.showMessageDialog(this, "Record Added Succesfully");
            } catch (Exception e) {
                System.out.println(e.toString());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Data is Empty");
        }

        //After Adding the Data Focusing on textName
        textName.setText("");
        textMobile.setText("");
        textCourse.setText("");
        textName.requestFocus();

        //Showing Mysql Data in JTable 
        tableUpdate();
    }                                       

    private void stuTableMouseClicked(java.awt.event.MouseEvent evt) {                                      
        
        DefaultTableModel defaultTableModel = (DefaultTableModel)stuTable.getModel();
        int selectedIndex = stuTable.getSelectedRow();
        
        textName.setText(defaultTableModel.getValueAt(selectedIndex, 1).toString());
        textMobile.setText(defaultTableModel.getValueAt(selectedIndex, 2).toString());
        textCourse.setText(defaultTableModel.getValueAt(selectedIndex, 3).toString());
    }                                     

    private void deleteDActionPerformed(java.awt.event.ActionEvent evt) {                                        

        DefaultTableModel defaultTableModel = (DefaultTableModel) stuTable.getModel();
        int selectedIndex = stuTable.getSelectedRow();

        try {
            int id = Integer.parseInt(defaultTableModel.getValueAt(selectedIndex, 0).toString());
            
            int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to Delete the record", "Warning", JOptionPane.YES_NO_CANCEL_OPTION);
            
            if (dialogResult == JOptionPane.YES_OPTION) {
                
                Class.forName(driver);
                connection = DriverManager.getConnection(url, user, password);
                insertwithq = connection.prepareStatement("delete from records where id = ?");
                insertwithq.setInt(1, id);
                insertwithq.executeUpdate();
                JOptionPane.showMessageDialog(this, "Record Deleted Succesfully");
                
                tableUpdate();
                textName.setText("");
                textMobile.setText("");
                textCourse.setText("");
                textName.requestFocus();
            }
        } catch (Exception e) {
            System.out.println(e.toString());
        }

    }                                       

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton addingD;
    private javax.swing.JButton deleteD;
    private javax.swing.JButton editD;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable stuTable;
    private javax.swing.JTextField textCourse;
    private javax.swing.JTextField textMobile;
    private javax.swing.JTextField textName;
    // End of variables declaration                   
}
